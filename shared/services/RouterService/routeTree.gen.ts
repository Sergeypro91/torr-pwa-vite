/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../../../routes/__root'
import { Route as IndexImport } from './../../../routes/index'
import { Route as ShowShowIdImport } from './../../../routes/show/$showId'
import { Route as PersonPersonIdImport } from './../../../routes/person/$personId'
import { Route as MovieMovieIdImport } from './../../../routes/movie/$movieId'

// Create Virtual Routes

const SearchLazyImport = createFileRoute('/search')()
const ProfileLazyImport = createFileRoute('/profile')()
const FilesLazyImport = createFileRoute('/files')()
const DownloadsLazyImport = createFileRoute('/downloads')()

// Create/Update Routes

const SearchLazyRoute = SearchLazyImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../../routes/search.lazy').then((d) => d.Route),
)

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../../routes/profile.lazy').then((d) => d.Route),
)

const FilesLazyRoute = FilesLazyImport.update({
  path: '/files',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../../routes/files.lazy').then((d) => d.Route),
)

const DownloadsLazyRoute = DownloadsLazyImport.update({
  path: '/downloads',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../../routes/downloads.lazy').then((d) => d.Route),
)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShowShowIdRoute = ShowShowIdImport.update({
  path: '/show/$showId',
  getParentRoute: () => rootRoute,
} as any)

const PersonPersonIdRoute = PersonPersonIdImport.update({
  path: '/person/$personId',
  getParentRoute: () => rootRoute,
} as any)

const MovieMovieIdRoute = MovieMovieIdImport.update({
  path: '/movie/$movieId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/downloads': {
      preLoaderRoute: typeof DownloadsLazyImport
      parentRoute: typeof rootRoute
    }
    '/files': {
      preLoaderRoute: typeof FilesLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchLazyImport
      parentRoute: typeof rootRoute
    }
    '/movie/$movieId': {
      preLoaderRoute: typeof MovieMovieIdImport
      parentRoute: typeof rootRoute
    }
    '/person/$personId': {
      preLoaderRoute: typeof PersonPersonIdImport
      parentRoute: typeof rootRoute
    }
    '/show/$showId': {
      preLoaderRoute: typeof ShowShowIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DownloadsLazyRoute,
  FilesLazyRoute,
  ProfileLazyRoute,
  SearchLazyRoute,
  MovieMovieIdRoute,
  PersonPersonIdRoute,
  ShowShowIdRoute,
])

/* prettier-ignore-end */
